image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  CONTAINER_HEROKU_IMAGE: registry.heroku.com/$HEROKU_APP_NAME/app

stages:
  - build
  
docker-build:
  stage: build
  script:
  - docker build --pull -f Dockerfile --iidfile imageid.txt -t $CONTAINER_TEST_IMAGE .
  - docker push $CONTAINER_TEST_IMAGE
  - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_HEROKU_IMAGE
  - docker login -u _ -p $HEROKU_TOKEN registry.heroku.com
  - docker push $CONTAINER_HEROKU_IMAGE
  - echo "push completed"
  - apk add --no-cache curl
  - echo "Docker Image ID is $(cat imageid.txt)"
  - |-
    curl -X PATCH https://api.heroku.com/apps/dai-lens/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
  only:
    - develop
    - master
  except:
    -tags

release-image:
  stage: release
  script:
    - docker build --pull -f Dockerfile --iidfile imageid.txt -t $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - tags